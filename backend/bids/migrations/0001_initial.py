# Generated by Django 5.2.5 on 2025-08-28 07:48

import bids.models
import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bid_reference', models.CharField(max_length=100, unique=True)),
                ('total_bid_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='ZMW', max_length=3)),
                ('vat_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('vat_inclusive', models.BooleanField(default=True)),
                ('bid_validity_days', models.PositiveIntegerField()),
                ('delivery_period', models.CharField(blank=True, max_length=100)),
                ('payment_terms', models.TextField(blank=True)),
                ('warranty_period', models.CharField(blank=True, max_length=100)),
                ('technical_proposal', models.TextField(blank=True)),
                ('methodology', models.TextField(blank=True)),
                ('project_timeline', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('withdrawn', 'Withdrawn'), ('disqualified', 'Disqualified'), ('qualified', 'Qualified'), ('winning', 'Winning'), ('losing', 'Losing')], default='draft', max_length=15)),
                ('submission_method', models.CharField(choices=[('online', 'Online'), ('physical', 'Physical'), ('email', 'Email')], default='online', max_length=10)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('technical_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ranking', models.PositiveIntegerField(blank=True, null=True)),
                ('bid_security_submitted', models.BooleanField(default=False)),
                ('bid_security_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('bid_security_reference', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BidDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=200)),
                ('document_type', models.CharField(choices=[('technical_proposal', 'Technical Proposal'), ('financial_proposal', 'Financial Proposal'), ('company_profile', 'Company Profile'), ('tax_clearance', 'Tax Clearance'), ('insurance', 'Insurance Certificate'), ('registration_cert', 'Registration Certificate'), ('other', 'Other')], max_length=20)),
                ('file', models.FileField(upload_to=bids.models.bid_document_path)),
                ('file_size', models.PositiveBigIntegerField(blank=True, null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('is_required', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BidEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technical_compliance', models.BooleanField(default=False)),
                ('technical_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('technical_remarks', models.TextField(blank=True)),
                ('financial_compliance', models.BooleanField(default=False)),
                ('financial_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_remarks', models.TextField(blank=True)),
                ('overall_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('recommendation', models.CharField(blank=True, choices=[('accept', 'Accept'), ('reject', 'Reject'), ('conditional_accept', 'Conditional Accept')], max_length=20, null=True)),
                ('evaluator_comments', models.TextField(blank=True)),
                ('evaluation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BidItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.PositiveIntegerField()),
                ('description', models.CharField(max_length=500)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit_of_measure', models.CharField(blank=True, max_length=50)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('specifications', models.TextField(blank=True)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('country_of_origin', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'ordering': ['item_number'],
            },
        ),
        migrations.CreateModel(
            name='CommitteeMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('chairperson', 'Chairperson'), ('secretary', 'Secretary'), ('member', 'Member'), ('observer', 'Observer')], max_length=15)),
                ('expertise_area', models.CharField(blank=True, max_length=200)),
                ('appointed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contract_number', models.CharField(max_length=100, unique=True)),
                ('contract_title', models.CharField(max_length=500)),
                ('contract_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='ZMW', max_length=3)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('delivery_period', models.CharField(blank=True, max_length=100)),
                ('warranty_period', models.CharField(blank=True, max_length=100)),
                ('payment_terms', models.TextField(blank=True)),
                ('performance_guarantee_required', models.BooleanField(default=False)),
                ('performance_guarantee_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('signed', 'Signed'), ('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='draft', max_length=15)),
                ('contract_signed_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContractMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('payment_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('delayed', 'Delayed')], default='pending', max_length=15)),
                ('completed_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationCommittee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('committee_name', models.CharField(max_length=200)),
                ('appointment_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('disbanded', 'Disbanded')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
    ]
