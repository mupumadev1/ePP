# Generated by Django 5.2.5 on 2025-09-16 12:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bids', '0002_initial'),
        ('tenders', '0004_alter_tender_evaluation_criteria_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('compliance', 'Compliance'), ('technical', 'Technical'), ('financial', 'Financial')], max_length=10)),
                ('criterion_type', models.CharField(choices=[('score', 'Score'), ('boolean', 'Boolean'), ('upload', 'Upload')], default='score', max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('max_points', models.DecimalField(decimal_places=2, default=100, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('mandatory', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('expected_upload', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='criteria_links', to='tenders.tenderuploaddocuments')),
                ('tender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria', to='tenders.tender')),
            ],
            options={
                'ordering': ['section', 'order', 'name'],
                'unique_together': {('tender', 'section', 'name')},
            },
        ),
        migrations.CreateModel(
            name='TenderEvaluationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technical_weight', models.DecimalField(decimal_places=2, default=70, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_weight', models.DecimalField(decimal_places=2, default=30, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('compliance_required', models.BooleanField(default=True)),
                ('enforce_mandatory', models.BooleanField(default=True)),
                ('technical_pass_mark', models.DecimalField(decimal_places=2, default=70, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('financial_method', models.CharField(choices=[('lowest_price', 'Lowest Price'), ('criteria', 'Criteria Based')], default='lowest_price', max_length=20)),
                ('cap_financial_score_at', models.DecimalField(decimal_places=2, default=100, max_digits=5)),
                ('tender', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_config', to='tenders.tender')),
            ],
        ),
        migrations.CreateModel(
            name='BidCriterionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)])),
                ('comments', models.TextField(blank=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criterion_scores', to='bids.bidevaluation')),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='scores', to='bids.evaluationcriterion')),
            ],
            options={
                'unique_together': {('evaluation', 'criterion')},
            },
        ),
    ]
